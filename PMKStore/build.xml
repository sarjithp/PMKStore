<?xml version="1.0" encoding="utf-8" ?>
<project name="PMKStore" default="war" basedir=".">
  <property name="permutation" value="" />
  <!-- Configure path to GWT SDK -->
  <property name="gwt.sdk" location="reference/gwt-2.8.2" />
  <property name="build.dir" value="${basedir}/war/WEB-INF/classes" />

  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <!--<pathelement location="${gwt.sdk}/gwt-voices-3.3.2.jar"/>
  	<pathelement location="${gwt.sdk}/gflot-3.3.0.jar"/>-->
  	
    <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
    <fileset dir="${gwt.sdk}" includes="validation-api-*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) -->
    <fileset dir="reference/lib" includes="**/*.jar"/>
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
  </path>

  <target name="libs" description="Copy libs to WEB-INF/lib">
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
  	<!-- Add any additional server libs that need to be copied 
    <copy todir="war/WEB-INF/lib" file="${reference.dir}/saaj-impl-1.3.2.jar"/> -->
  </target>

  <target name="javac" depends="libs" description="Compile java source">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.6" target="1.6" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx1500M"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
    	<arg value="-draftCompile"/>
<!--
      <arg line="-logLevel"/>
      <arg value="TRACE"/>
-->
      <arg value="-compileReport"/>
      <arg value="com.pmk.PMKStore${permutation}"/>
    </java>
  </target>

  <target name="devmode" depends="javac" description="Run development mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <arg value="-startupUrl"/>
      <arg value="PMKStore.html"/>
      <!--<arg value="EcrModule.html"/>
      <arg value="Production.html"/> -->
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="com.icalibrator.posibolt.PMKStore"/>
    	<!--<arg value="com.posibolt.ecr"/>
      <arg value="com.posibolt.production"/>-->
    </java>
  </target>
	
	<target name="superdevmode" depends="javac" description="Run Code Server mode">
	    <java failonerror="true" fork="true" classname="com.google.gwt.dev.codeserver.CodeServer">
	        <classpath>
	            <pathelement location="src"/>
	            <path refid="project.class.path"/>
	            <pathelement location="./reference/gwt-2.8.2/gwt-codeserver.jar" />
	            <pathelement location="./reference/gwt-2.8.2/validation-api-1.0.0.GA.jar" />
	            <pathelement location="./reference/gwt-2.8.2/validation-api-1.0.0.GA-sources.jar" />
	        </classpath>
	        <jvmarg value="-Xmx1024M"/>
	        <!--<arg value="-bindAddress"/>
	        <arg value="0.0.0.0"/>-->
	        <arg line="-port"/>
	        <arg value="9876"/>
	        <arg line="-src"/>
	        <arg value="src"/>
	        <arg value="com.icalibrator.posibolt.PMKStoreChrome"/>
	    </java>
	</target>

  <target name="javac.tests" depends="javac" description="Compiles test code">
    <javac srcdir="test" includes="**" encoding="utf-8"
      source="1.6" target="1.6" nowarn="true"
      debug="true" debuglevel="lines,vars,source">
      <classpath location="path_to_the_junit_jar"/>
      <classpath refid="project.class.path"/>
    </javac>
  </target>
  
  <target name="test.dev" depends="javac.tests" description="Run development mode tests">
    <mkdir dir="reports/htmlunit.dev" />
    <junit fork="yes" printsummary="yes" haltonfailure="yes">
      <jvmarg line="-Xmx256m" />
      <sysproperty key="gwt.args" value="-logLevel WARN" />
      <sysproperty key="java.awt.headless" value="true" />
      <classpath>
      	<pathelement location="src" />
      	<pathelement location="test" />
        <path refid="project.class.path" />
        <pathelement location="path_to_the_junit_jar" />
      </classpath>
      <batchtest todir="reports/htmlunit.dev" >
        <fileset dir="test" >
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="plain" />
      <formatter type="xml" />
    </junit>
  </target>

  <target name="test.prod" depends="javac.tests" description="Run production mode tests">
    <mkdir dir="reports/htmlunit.prod" />
    <junit fork="yes" printsummary="yes" haltonfailure="yes">
      <jvmarg line="-Xmx256m" />
      <sysproperty key="gwt.args" value="-prod -logLevel WARN -out www-test" />
      <sysproperty key="java.awt.headless" value="true" />
      <classpath>
        <pathelement location="src" />
        <pathelement location="test" />
        <path refid="project.class.path" />
        <pathelement location="path_to_the_junit_jar" />
      </classpath>
      <batchtest todir="reports/htmlunit.prod" >
        <fileset dir="test" >
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="plain" />
      <formatter type="xml" />
    </junit>
  </target>

  <target name="test" description="Run development and production mode tests">
    <antcall target="test.dev" />
    <antcall target="test.prod" />
  </target>

  <target name="hosted" depends="devmode" description="Run development mode (NOTE: the 'hosted' target is deprecated)" />

  <target name="build" depends="gwtc" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="PMK.war" basedir="war"/>
  </target>
	
  <target name="deploy" depends="war" description="Deploy war file to adempireQA">
	<copy todir="/home/sarjith/eclipse-neon-workspace/apache-tomcat-9.0.30/webapps/" overwrite="true">
		<fileset file="PMK.war">
		</fileset>
	</copy>
  </target>

  <target name="tmp" depends="javac" description="to create war file by skipping gwtc if there is only server side change">
    <zip destfile="PMK.war" basedir="war"/>
    <copy todir="/home/sarjith/eclipse-neon-workspace/apache-tomcat-9.0.30/webapps/" overwrite="true" file="PMK.war" />
  </target>

  <target name="clean" description="Cleans this project">
	<delete dir="war/WEB-INF/classes" failonerror="false" />
	<delete dir="war/pmkstore" failonerror="false" />
  	<delete file="war/WEB-INF/lib/gwt-servlet.jar" failonerror="false" />
  	<delete file="PMK.war" failonerror="false" />
  </target>

	<target name="createapplet" depends="javac">
		<delete dir="${build.applet.dir}" />
		<mkdir dir="${build.applet.dir}"/>
		<copy todir="${build.applet.dir}" overwrite="yes">
			<fileset dir="${build.dir}">
			    <include name="PrintApplet*"/>
			</fileset>
		</copy>
		<jar destfile="${basedir}/war/applets/PrintApplet.jar" basedir="${build.applet.dir}" />
		<signjar jar="${basedir}/war/applets/PrintApplet.jar" alias="posterita" 
		storepass="kaizen" keystore="${basedir}/.keystore" />
		<delete dir="${build.applet.dir}" />
	</target>
</project>
